JSON
 4. Создать внешний репозиторий c названием JSON.

github.com > new repository > create 

 5. Клонировать репозиторий JSON на локальный компьютер.

code copy link

git clone link
 
 6. Внутри локального JSON создать файл “new.json”.

touch new.json

 7. Добавить файл под гит.

git add new.json

 8. Закоммитить файл.
 
 git commit -m "new json file"
 
 9. Отправить файл на внешний GitHub репозиторий.
 
 git push
 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

{
        "First name": "Egor",
	"Last name": "Beluga",
        "age": "28",
        "number of pets": "0",
        "future desired salary": "Negotiable"
}

 11. Отправить изменения на внешний репозиторий.

gid commit -am " add code"
git push

 12. Создать файл preferences.json

touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

vim preferences.json

{
	"Favourite TV show": "Love Death + Robots",
	"Fovourite movie": "Lost River",
	"Fovourite food": "Lobster roll",
	"Favorite time of year": "Summer",
	"Сountry you would like to visit": "Japan"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

touch skills.json
vim skills.json

 15. Отправить сразу 2 файла на внешний репозиторий.

git add preferences.json skills.json
git commit -m " 2 new files"
git push

 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
